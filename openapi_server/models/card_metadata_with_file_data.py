from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.user_dto import UserDTO
from openapi_server import util

from openapi_server.models.user_dto import UserDTO  # noqa: E501

class CardMetadataWithFileData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author=None, card_html=None, content=None, created_at=None, file_id=None, file_name=None, id=None, link=None, metadata=None, private=None, qdrant_point_id=None, tag_set=None, time_stamp=None, tracking_id=None, updated_at=None):  # noqa: E501
        """CardMetadataWithFileData - a model defined in OpenAPI

        :param author: The author of this CardMetadataWithFileData.  # noqa: E501
        :type author: UserDTO
        :param card_html: The card_html of this CardMetadataWithFileData.  # noqa: E501
        :type card_html: str
        :param content: The content of this CardMetadataWithFileData.  # noqa: E501
        :type content: str
        :param created_at: The created_at of this CardMetadataWithFileData.  # noqa: E501
        :type created_at: datetime
        :param file_id: The file_id of this CardMetadataWithFileData.  # noqa: E501
        :type file_id: str
        :param file_name: The file_name of this CardMetadataWithFileData.  # noqa: E501
        :type file_name: str
        :param id: The id of this CardMetadataWithFileData.  # noqa: E501
        :type id: str
        :param link: The link of this CardMetadataWithFileData.  # noqa: E501
        :type link: str
        :param metadata: The metadata of this CardMetadataWithFileData.  # noqa: E501
        :type metadata: object
        :param private: The private of this CardMetadataWithFileData.  # noqa: E501
        :type private: bool
        :param qdrant_point_id: The qdrant_point_id of this CardMetadataWithFileData.  # noqa: E501
        :type qdrant_point_id: str
        :param tag_set: The tag_set of this CardMetadataWithFileData.  # noqa: E501
        :type tag_set: str
        :param time_stamp: The time_stamp of this CardMetadataWithFileData.  # noqa: E501
        :type time_stamp: datetime
        :param tracking_id: The tracking_id of this CardMetadataWithFileData.  # noqa: E501
        :type tracking_id: str
        :param updated_at: The updated_at of this CardMetadataWithFileData.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'author': UserDTO,
            'card_html': str,
            'content': str,
            'created_at': datetime,
            'file_id': str,
            'file_name': str,
            'id': str,
            'link': str,
            'metadata': object,
            'private': bool,
            'qdrant_point_id': str,
            'tag_set': str,
            'time_stamp': datetime,
            'tracking_id': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'author': 'author',
            'card_html': 'card_html',
            'content': 'content',
            'created_at': 'created_at',
            'file_id': 'file_id',
            'file_name': 'file_name',
            'id': 'id',
            'link': 'link',
            'metadata': 'metadata',
            'private': 'private',
            'qdrant_point_id': 'qdrant_point_id',
            'tag_set': 'tag_set',
            'time_stamp': 'time_stamp',
            'tracking_id': 'tracking_id',
            'updated_at': 'updated_at'
        }

        self._author = author
        self._card_html = card_html
        self._content = content
        self._created_at = created_at
        self._file_id = file_id
        self._file_name = file_name
        self._id = id
        self._link = link
        self._metadata = metadata
        self._private = private
        self._qdrant_point_id = qdrant_point_id
        self._tag_set = tag_set
        self._time_stamp = time_stamp
        self._tracking_id = tracking_id
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'CardMetadataWithFileData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CardMetadataWithFileData of this CardMetadataWithFileData.  # noqa: E501
        :rtype: CardMetadataWithFileData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self) -> UserDTO:
        """Gets the author of this CardMetadataWithFileData.


        :return: The author of this CardMetadataWithFileData.
        :rtype: UserDTO
        """
        return self._author

    @author.setter
    def author(self, author: UserDTO):
        """Sets the author of this CardMetadataWithFileData.


        :param author: The author of this CardMetadataWithFileData.
        :type author: UserDTO
        """

        self._author = author

    @property
    def card_html(self) -> str:
        """Gets the card_html of this CardMetadataWithFileData.


        :return: The card_html of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._card_html

    @card_html.setter
    def card_html(self, card_html: str):
        """Sets the card_html of this CardMetadataWithFileData.


        :param card_html: The card_html of this CardMetadataWithFileData.
        :type card_html: str
        """

        self._card_html = card_html

    @property
    def content(self) -> str:
        """Gets the content of this CardMetadataWithFileData.


        :return: The content of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this CardMetadataWithFileData.


        :param content: The content of this CardMetadataWithFileData.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this CardMetadataWithFileData.


        :return: The created_at of this CardMetadataWithFileData.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this CardMetadataWithFileData.


        :param created_at: The created_at of this CardMetadataWithFileData.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def file_id(self) -> str:
        """Gets the file_id of this CardMetadataWithFileData.


        :return: The file_id of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id: str):
        """Sets the file_id of this CardMetadataWithFileData.


        :param file_id: The file_id of this CardMetadataWithFileData.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def file_name(self) -> str:
        """Gets the file_name of this CardMetadataWithFileData.


        :return: The file_name of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name: str):
        """Sets the file_name of this CardMetadataWithFileData.


        :param file_name: The file_name of this CardMetadataWithFileData.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def id(self) -> str:
        """Gets the id of this CardMetadataWithFileData.


        :return: The id of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this CardMetadataWithFileData.


        :param id: The id of this CardMetadataWithFileData.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def link(self) -> str:
        """Gets the link of this CardMetadataWithFileData.


        :return: The link of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link: str):
        """Sets the link of this CardMetadataWithFileData.


        :param link: The link of this CardMetadataWithFileData.
        :type link: str
        """

        self._link = link

    @property
    def metadata(self) -> object:
        """Gets the metadata of this CardMetadataWithFileData.


        :return: The metadata of this CardMetadataWithFileData.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: object):
        """Sets the metadata of this CardMetadataWithFileData.


        :param metadata: The metadata of this CardMetadataWithFileData.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def private(self) -> bool:
        """Gets the private of this CardMetadataWithFileData.


        :return: The private of this CardMetadataWithFileData.
        :rtype: bool
        """
        return self._private

    @private.setter
    def private(self, private: bool):
        """Sets the private of this CardMetadataWithFileData.


        :param private: The private of this CardMetadataWithFileData.
        :type private: bool
        """
        if private is None:
            raise ValueError("Invalid value for `private`, must not be `None`")  # noqa: E501

        self._private = private

    @property
    def qdrant_point_id(self) -> str:
        """Gets the qdrant_point_id of this CardMetadataWithFileData.


        :return: The qdrant_point_id of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._qdrant_point_id

    @qdrant_point_id.setter
    def qdrant_point_id(self, qdrant_point_id: str):
        """Sets the qdrant_point_id of this CardMetadataWithFileData.


        :param qdrant_point_id: The qdrant_point_id of this CardMetadataWithFileData.
        :type qdrant_point_id: str
        """
        if qdrant_point_id is None:
            raise ValueError("Invalid value for `qdrant_point_id`, must not be `None`")  # noqa: E501

        self._qdrant_point_id = qdrant_point_id

    @property
    def tag_set(self) -> str:
        """Gets the tag_set of this CardMetadataWithFileData.


        :return: The tag_set of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._tag_set

    @tag_set.setter
    def tag_set(self, tag_set: str):
        """Sets the tag_set of this CardMetadataWithFileData.


        :param tag_set: The tag_set of this CardMetadataWithFileData.
        :type tag_set: str
        """

        self._tag_set = tag_set

    @property
    def time_stamp(self) -> datetime:
        """Gets the time_stamp of this CardMetadataWithFileData.


        :return: The time_stamp of this CardMetadataWithFileData.
        :rtype: datetime
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp: datetime):
        """Sets the time_stamp of this CardMetadataWithFileData.


        :param time_stamp: The time_stamp of this CardMetadataWithFileData.
        :type time_stamp: datetime
        """

        self._time_stamp = time_stamp

    @property
    def tracking_id(self) -> str:
        """Gets the tracking_id of this CardMetadataWithFileData.


        :return: The tracking_id of this CardMetadataWithFileData.
        :rtype: str
        """
        return self._tracking_id

    @tracking_id.setter
    def tracking_id(self, tracking_id: str):
        """Sets the tracking_id of this CardMetadataWithFileData.


        :param tracking_id: The tracking_id of this CardMetadataWithFileData.
        :type tracking_id: str
        """

        self._tracking_id = tracking_id

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this CardMetadataWithFileData.


        :return: The updated_at of this CardMetadataWithFileData.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this CardMetadataWithFileData.


        :param updated_at: The updated_at of this CardMetadataWithFileData.
        :type updated_at: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")  # noqa: E501

        self._updated_at = updated_at

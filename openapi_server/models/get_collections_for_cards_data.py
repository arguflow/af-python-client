from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCollectionsForCardsData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_ids=None):  # noqa: E501
        """GetCollectionsForCardsData - a model defined in OpenAPI

        :param card_ids: The card_ids of this GetCollectionsForCardsData.  # noqa: E501
        :type card_ids: List[str]
        """
        self.openapi_types = {
            'card_ids': List[str]
        }

        self.attribute_map = {
            'card_ids': 'card_ids'
        }

        self._card_ids = card_ids

    @classmethod
    def from_dict(cls, dikt) -> 'GetCollectionsForCardsData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetCollectionsForCardsData of this GetCollectionsForCardsData.  # noqa: E501
        :rtype: GetCollectionsForCardsData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_ids(self) -> List[str]:
        """Gets the card_ids of this GetCollectionsForCardsData.


        :return: The card_ids of this GetCollectionsForCardsData.
        :rtype: List[str]
        """
        return self._card_ids

    @card_ids.setter
    def card_ids(self, card_ids: List[str]):
        """Sets the card_ids of this GetCollectionsForCardsData.


        :param card_ids: The card_ids of this GetCollectionsForCardsData.
        :type card_ids: List[str]
        """
        if card_ids is None:
            raise ValueError("Invalid value for `card_ids`, must not be `None`")  # noqa: E501

        self._card_ids = card_ids

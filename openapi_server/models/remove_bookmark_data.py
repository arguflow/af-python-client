from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class RemoveBookmarkData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_metadata_id=None):  # noqa: E501
        """RemoveBookmarkData - a model defined in OpenAPI

        :param card_metadata_id: The card_metadata_id of this RemoveBookmarkData.  # noqa: E501
        :type card_metadata_id: str
        """
        self.openapi_types = {
            'card_metadata_id': str
        }

        self.attribute_map = {
            'card_metadata_id': 'card_metadata_id'
        }

        self._card_metadata_id = card_metadata_id

    @classmethod
    def from_dict(cls, dikt) -> 'RemoveBookmarkData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RemoveBookmarkData of this RemoveBookmarkData.  # noqa: E501
        :rtype: RemoveBookmarkData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_metadata_id(self) -> str:
        """Gets the card_metadata_id of this RemoveBookmarkData.


        :return: The card_metadata_id of this RemoveBookmarkData.
        :rtype: str
        """
        return self._card_metadata_id

    @card_metadata_id.setter
    def card_metadata_id(self, card_metadata_id: str):
        """Sets the card_metadata_id of this RemoveBookmarkData.


        :param card_metadata_id: The card_metadata_id of this RemoveBookmarkData.
        :type card_metadata_id: str
        """
        if card_metadata_id is None:
            raise ValueError("Invalid value for `card_metadata_id`, must not be `None`")  # noqa: E501

        self._card_metadata_id = card_metadata_id

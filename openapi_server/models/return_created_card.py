from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.card_metadata import CardMetadata
from openapi_server import util

from openapi_server.models.card_metadata import CardMetadata  # noqa: E501

class ReturnCreatedCard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_metadata=None, duplicate=None):  # noqa: E501
        """ReturnCreatedCard - a model defined in OpenAPI

        :param card_metadata: The card_metadata of this ReturnCreatedCard.  # noqa: E501
        :type card_metadata: CardMetadata
        :param duplicate: The duplicate of this ReturnCreatedCard.  # noqa: E501
        :type duplicate: bool
        """
        self.openapi_types = {
            'card_metadata': CardMetadata,
            'duplicate': bool
        }

        self.attribute_map = {
            'card_metadata': 'card_metadata',
            'duplicate': 'duplicate'
        }

        self._card_metadata = card_metadata
        self._duplicate = duplicate

    @classmethod
    def from_dict(cls, dikt) -> 'ReturnCreatedCard':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReturnCreatedCard of this ReturnCreatedCard.  # noqa: E501
        :rtype: ReturnCreatedCard
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_metadata(self) -> CardMetadata:
        """Gets the card_metadata of this ReturnCreatedCard.


        :return: The card_metadata of this ReturnCreatedCard.
        :rtype: CardMetadata
        """
        return self._card_metadata

    @card_metadata.setter
    def card_metadata(self, card_metadata: CardMetadata):
        """Sets the card_metadata of this ReturnCreatedCard.


        :param card_metadata: The card_metadata of this ReturnCreatedCard.
        :type card_metadata: CardMetadata
        """
        if card_metadata is None:
            raise ValueError("Invalid value for `card_metadata`, must not be `None`")  # noqa: E501

        self._card_metadata = card_metadata

    @property
    def duplicate(self) -> bool:
        """Gets the duplicate of this ReturnCreatedCard.


        :return: The duplicate of this ReturnCreatedCard.
        :rtype: bool
        """
        return self._duplicate

    @duplicate.setter
    def duplicate(self, duplicate: bool):
        """Sets the duplicate of this ReturnCreatedCard.


        :param duplicate: The duplicate of this ReturnCreatedCard.
        :type duplicate: bool
        """
        if duplicate is None:
            raise ValueError("Invalid value for `duplicate`, must not be `None`")  # noqa: E501

        self._duplicate = duplicate
